version: '3.7'

services:
  minio1:
    image: minio/minio:RELEASE.2020-12-12T08-39-07Z
    hostname: minio
    volumes:
      - .docker/minio/data1-1:/data1
      - .docker/minio/data1-2:/data2
    expose:
      - "9000"
    environment:
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: password@123
    command: server http://minio{1...2}/data{1...2}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    # network_mode: host
    # networks:
    #   - minio-local
      
  minio2:
    image: minio/minio:RELEASE.2020-12-12T08-39-07Z
    volumes:
      - .docker/minio/data2-1:/data1
      - .docker/minio/data2-2:/data2
    expose:
      - "9000"
    environment:
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: password@123
    command: server http://minio{1...2}/data{1...2}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    # network_mode: host  
    # networks:
    #   - minio-local

  minio-nginx:
    image: nginx:1.19.2-alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    expose:
      - "9000"
    ports:
      - "9000:9000"
    depends_on:
      - minio1
      - minio2
    # network_mode: host
    # networks:
    #   - minio-local
      
  libcor:
    build: .
    container_name: "LibCor"
    network_mode: host
    expose:
      - "5000"
    environment:
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: password@123
      MINIO_HOST: 0.0.0.0
      MINIO_PORT: 9000
    # ports:
    #   - "5000:5000"
    depends_on:
      - minio-nginx
      - minio1
      - minio2
    # networks:
    #   - minio-local
    #network_mode: host
  vault:
    image: hashicorp/vault
    container_name: do-5-libcor-vault
    hostname: vault
    ports:
      - 8201:8201
    volumes:
      - ./config.hcl:/vault/config/config.hcl
        # - vault-data:/vault/file/
    environment:
      - VAULT_ADDR=http://localhost:8201
      - VAULT_DEV_ROOT_TOKEN_ID=00000000-0000-0000-0000-000000000000
      - VAULT_TOKEN=00000000-0000-0000-0000-000000000000
    cap_add:
      - IPC_LOCK
    command: server -dev -dev-root-token-id="00000000-0000-0000-0000-000000000000"
    restart: always

# networks:
#   minio-local:
#     driver: bridge
    # external: true

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9990:9090"
    volumes:
      - ./monitoring/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    restart: unless-stopped

  alertmanager:
    depends_on:
      - prometheus
    image: prom/alertmanager:latest
    container_name: alertmanager
    ports:
      - "9993:9093"
    volumes:
      - ./monitoring/alertmanager/:/etc/alertmanager/
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped

  grafana:
    image: grafana/grafana
    user: root
    container_name: grafana
    depends_on: 
      - prometheus
    ports:
      - "3300:3000"
    volumes:
      - ./monitoring/grafana/:/var/lib/grafana
      - ./monitoring/grafana-provisioning:/etc/grafana/provisioning/
    restart: unless-stopped

volumes:
  prometheus_data:
  alertmanager_data:
